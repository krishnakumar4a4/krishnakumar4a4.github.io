<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Projects on Krishna Kumar T</title>
    <link>https://krishnakumar4a4.github.io/projects/</link>
    <description>Recent content in Projects on Krishna Kumar T</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 04 Apr 2021 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://krishnakumar4a4.github.io/projects/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>In Meeting Indicator</title>
      <link>https://krishnakumar4a4.github.io/projects/in-meeting-indicator/</link>
      <pubDate>Sun, 04 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://krishnakumar4a4.github.io/projects/in-meeting-indicator/</guid>
      <description>So many of you have gotten accustomed to work from home by now. This pandemic has thrown a lot of challenges at our face when most of us are not ready for. While Work From Home is kind of boon, living with it for a long time comes with its own unique challenges. One of the simplest challenge I have faced in the initial days was to make my family understand that I am in a meeting where Mic/Camera/both are activated.</description>
    </item>
    
    <item>
      <title>Remote Debug Tool</title>
      <link>https://krishnakumar4a4.github.io/projects/remote-debug/</link>
      <pubDate>Wed, 01 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://krishnakumar4a4.github.io/projects/remote-debug/</guid>
      <description></description>
    </item>
    
    <item>
      <title>TcpProxy</title>
      <link>https://krishnakumar4a4.github.io/projects/tcp-proxy/</link>
      <pubDate>Sun, 06 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://krishnakumar4a4.github.io/projects/tcp-proxy/</guid>
      <description>A simple proxy server for HTTP/S requests which can calculate the network upload and download speed in bytes/sec.
./tcpproxy --help for usage
./tcpproxy --port 2345 to listen on particular port with chained proxy assumed to be running localhost:3128
./tcpproxy --proxy --no-proxy to listen on particular port with no chained proxy</description>
    </item>
    
    <item>
      <title>CLI Poker Game</title>
      <link>https://krishnakumar4a4.github.io/projects/cli-poker-game/</link>
      <pubDate>Mon, 26 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://krishnakumar4a4.github.io/projects/cli-poker-game/</guid>
      <description> A simple CLI poker game
mix test - to run the tests
mix excript.build - to compile
./poker - runs the application
Example run ./poker Black: 2H 3C 4H 5D TC White: 2H 3C 4H 5D TC tie Black: 2H 3C 4H 5D TC White: 2H 3C 4H 5D KC White is winner - highcard: K Black: 2H 3C 4H KD KC White: 2H 3C 4H KD KC tie Black: 2H 3C 4H KD KC White: 2H 3C 5H KD KC White is winner - pair: 5 Black: 1H 3C 5H KD KC White: 2H 3C 5H KD KC Invalid input from Black  </description>
    </item>
    
    <item>
      <title>SSH Reverse Tunnel</title>
      <link>https://krishnakumar4a4.github.io/projects/ssh-reverse-tunnel/</link>
      <pubDate>Tue, 23 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://krishnakumar4a4.github.io/projects/ssh-reverse-tunnel/</guid>
      <description>On corporate networks, we always have a problem of having restrictions on internet access to applications.
Of course, these restrictions are absolutely necessary in terms of security. But what if we need to give temporary internet access to these applications?
We can combine SSH reverse tunnel with a proxy server to do this.
How to run ./go-ssh-reverse-tunnel -u &amp;lt;username for SSH&amp;gt; -i &amp;lt;private key file path&amp;gt; -t &amp;lt;target ssh host name&amp;gt; -p &amp;lt;reverse tunnel listening port on target&amp;gt;</description>
    </item>
    
    <item>
      <title>desync-rs</title>
      <link>https://krishnakumar4a4.github.io/projects/desync-rs/</link>
      <pubDate>Sat, 13 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://krishnakumar4a4.github.io/projects/desync-rs/</guid>
      <description> TODO: Update usage here
 </description>
    </item>
    
    <item>
      <title>rust-java-rust</title>
      <link>https://krishnakumar4a4.github.io/projects/rust-java-rust/</link>
      <pubDate>Sun, 24 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://krishnakumar4a4.github.io/projects/rust-java-rust/</guid>
      <description> For Interoperability between rust and java
Special about this repo: Do not require rust library to be dynamically loaded for calling methods on rust.
Features:  JVM is started as embedded from the rust program. Java methods can be called from rust. Rust methods are registered as native functions to JVM and which can then be called from Java.  Uses rucaja, jni-rs and jni crates. </description>
    </item>
    
    <item>
      <title>Dashboard For Casync</title>
      <link>https://krishnakumar4a4.github.io/projects/casync-dashboard/</link>
      <pubDate>Sat, 08 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://krishnakumar4a4.github.io/projects/casync-dashboard/</guid>
      <description>A frontend dashboard(in web assembly) for managing content for casync,desync and casync-rs type tools
Build and run cargo web start --target wasm32-unknown-unknown
Screenshots of dashboard View for uploading chunks, indexes and blobs   View for showing all chunks   View for showing all indexes   View for showing all tags   View for showing download trends graph of chunks   View for showing download trends graph of indexes   How does this work?</description>
    </item>
    
    <item>
      <title>backer-rs</title>
      <link>https://krishnakumar4a4.github.io/projects/backer-rs/</link>
      <pubDate>Fri, 19 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://krishnakumar4a4.github.io/projects/backer-rs/</guid>
      <description>Never Loose data/notes - An efficient git based backup tool to save your changes periodically.
A git based backup tool. Intelligent enough to trigger a commit, only, if there are any file changes in the folder it is pointed to. Based on cross-platform file notification library.
Example use cases:  Can be pointed to storage locations of note applications like boostnote  Build  cargo build --release backer-rs is the executable generated in target/release/ folder.</description>
    </item>
    
    <item>
      <title>casync-rs</title>
      <link>https://krishnakumar4a4.github.io/projects/casync-rs/</link>
      <pubDate>Wed, 26 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://krishnakumar4a4.github.io/projects/casync-rs/</guid>
      <description>Experimental: Pure rust implementation of casync https://github.com/systemd/casync
Very minimal implementation of casync tool. Command Usage  inputfile will be chunked,index.caidxanddefault.castr` is created with chunks.
 casync-rs make --file input
 Expects index.caidx and default.castr directory to be present to construct out file from the chunks and index.
 casync-rs extract --file out
 Expects default.castr present with chunks corresponding to index.caidx file to construct the out file.
 casync-rs extract -i index.</description>
    </item>
    
    <item>
      <title>SpeakUp</title>
      <link>https://krishnakumar4a4.github.io/projects/speakup/</link>
      <pubDate>Tue, 29 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://krishnakumar4a4.github.io/projects/speakup/</guid>
      <description>Meetings and discussions get less cumbersome and more lively Ever occurred to your mind, why is it so problematic getting your ears on the most important session you had just now. You have some questions, perhaps someone might have asked the same and you wouldn&amp;rsquo;t want to repeat. Oh hell, can someone give him a microphone to talk!! OMG, Microphone is 5 rows behind the audience and it&amp;rsquo;s pretty hard circulating that in time.</description>
    </item>
    
    <item>
      <title>Code Challenges and Solutions</title>
      <link>https://krishnakumar4a4.github.io/projects/engines/</link>
      <pubDate>Sat, 26 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://krishnakumar4a4.github.io/projects/engines/</guid>
      <description>1) anaMon: Million events Erlang like engine 2) crawler: A web crawler of infinte link traversal 3) histogram-table: Dynamic histogram generation from a csv file and bucketsize, on click gives values as table 4) poker-ex: A CLI two player poker game written in elixir</description>
    </item>
    
  </channel>
</rss>