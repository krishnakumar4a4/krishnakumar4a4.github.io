<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Krishna Kumar T</title>
    <link>https://krishnakumar4a4.github.io/post/</link>
    <description>Recent content in Posts on Krishna Kumar T</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 04 Apr 2021 00:00:00 +0530</lastBuildDate><atom:link href="https://krishnakumar4a4.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>DIY: In meeting indicator - WFH Utility</title>
      <link>https://krishnakumar4a4.github.io/post/in-meeting-indicator/</link>
      <pubDate>Sun, 04 Apr 2021 00:00:00 +0530</pubDate>
      
      <guid>https://krishnakumar4a4.github.io/post/in-meeting-indicator/</guid>
      <description>DIY: In meeting indicator - WFH Utility The need for in meeting indicator at home So many of you have gotten accustomed to work from home by now. This pandemic has thrown a lot of challenges at our face when most of us are not ready for. While Work From Home is kind of boon, living with it for a long time comes with its own unique challenges. One of the simplest challenge I have faced in the initial days was to make my family understand that I am in a meeting where Mic/Camera/both are activated.</description>
    </item>
    
    <item>
      <title>Encrypted Minio Storage with KMS Setup</title>
      <link>https://krishnakumar4a4.github.io/post/encrypted-minio-storage-with-kms/</link>
      <pubDate>Sat, 06 Feb 2021 00:00:00 +0530</pubDate>
      
      <guid>https://krishnakumar4a4.github.io/post/encrypted-minio-storage-with-kms/</guid>
      <description>Minio is an S3 compliant data storage service. It can be hosted on premises and even supports distribution across multiple nodes. To meet certain data protection regulations, data is required to be encrypted the moment it is written to disk. Minio supports two types of encryption schemes
SSE-S3 (Server side encryption) — Encryption key is managed on server side typically using a KMS SSE-C (Client side encryption) — Encryption key is managed by clients and provided as request headers to Minio Goal of this blog is to guide you through setting up Minio with server side encryption.</description>
    </item>
    
    <item>
      <title>The unexplored subtleties on “Going autonomous”</title>
      <link>https://krishnakumar4a4.github.io/post/unexplored-subtleties-autonomous-vehicles/</link>
      <pubDate>Sat, 04 Jan 2020 09:43:12 +0530</pubDate>
      
      <guid>https://krishnakumar4a4.github.io/post/unexplored-subtleties-autonomous-vehicles/</guid>
      <description>On a winter morning before the first light I was going on my bike on a silent road in the early hours of the day. The road looks entirely abandoned as it was one of the most chilling days of winter and I was not expecting anyone coming on to the road. But I was very much ambivalent and kept an eye on both sides of the road as far I can see through the fog.</description>
    </item>
    
    <item>
      <title>Fault injection attacks on secure boot</title>
      <link>https://krishnakumar4a4.github.io/post/fault-injection-attacks/</link>
      <pubDate>Sat, 16 Mar 2019 09:43:12 +0530</pubDate>
      
      <guid>https://krishnakumar4a4.github.io/post/fault-injection-attacks/</guid>
      <description>Nullconf is one of the largest conferences in security started in 2010 (as I keep hearing that from everyone). This is the first time I have ever attended a security conference and was little over excited too. I had been there for two days and took a load of quite interesting aspects of security domain as a whole. Lot of less known and discussed topics like hardware hacking in real-time, security in the post quantum era, AI in threat detection and mitigation, vulnerability of existing telecom networking infrastructure etc are few highlights of the event.</description>
    </item>
    
    <item>
      <title>“backer-rs” the missing versioned backup utility for boostnote/any note-taking app</title>
      <link>https://krishnakumar4a4.github.io/post/backer-rs-announcement/</link>
      <pubDate>Sun, 21 Oct 2018 09:43:12 +0530</pubDate>
      
      <guid>https://krishnakumar4a4.github.io/post/backer-rs-announcement/</guid>
      <description>“Autosave notes”, it is a pretty important feature for any note taking app. Having autosave enabled and running in the background saves you from loosing any important notes you have taken. We would have felt autosave itself is a kind of backup feature for your notes.
Recently, I had been in a situation where the autosave feature of boostnote misbehaved and lost all my notes till date. It’s a big disappointment.</description>
    </item>
    
    <item>
      <title>Websocket fever for IOT</title>
      <link>https://krishnakumar4a4.github.io/post/websocket-fever-for-iot/</link>
      <pubDate>Sat, 28 Jul 2018 09:43:12 +0530</pubDate>
      
      <guid>https://krishnakumar4a4.github.io/post/websocket-fever-for-iot/</guid>
      <description>Internet of things is a buzz now. In simpler terms, connecting all the things to the internet so that they are monitored and controlled from anywhere.
What is the most common protocol of internet. It is http. You open a browser enter a url and then you see content on your browser. How is that working? When you enter a url, your browser makes http get request to the site and fetches the content.</description>
    </item>
    
    <item>
      <title>Why Speak Up?</title>
      <link>https://krishnakumar4a4.github.io/post/speakup-announcement/</link>
      <pubDate>Wed, 20 Jun 2018 09:43:12 +0530</pubDate>
      
      <guid>https://krishnakumar4a4.github.io/post/speakup-announcement/</guid>
      <description>I am a tech enthusiast and I love to attend lot of meetups, conferences, events etc. The reason I attend them is
to get introduced to new technologies hear perspectives of people on technologies known to me Conference hall setup: Conference Hall Setup chuttersnap
Usually be a sparsely distributed clusters of people sitting relaxedly all over.
Some of the talks I attended will be so immersive and I couldn’t afford having even a slighter distraction fearing I would loose context.</description>
    </item>
    
    <item>
      <title>A Comparison between Rust and Erlang</title>
      <link>https://krishnakumar4a4.github.io/post/comparision-erlang-and-rust/</link>
      <pubDate>Tue, 13 Mar 2018 09:43:12 +0530</pubDate>
      
      <guid>https://krishnakumar4a4.github.io/post/comparision-erlang-and-rust/</guid>
      <description>Key Takeaways Erlang provides lightweight processes, immutability, distribution with location transparency, message passing, supervision behaviors and many other high-level, dynamic features that make it great for fault-tolerant, highly available, and scalable systems. Unfortunately, Erlang is less than optimal at doing low-level stuff such as XML parsing, since dealing with anything that comes from outside of the Erlang VM into it is tedious For this kind of use cases, one could be tempted to consider a different language.</description>
    </item>
    
    <item>
      <title>Simplifying Erlang Beam</title>
      <link>https://krishnakumar4a4.github.io/post/simplifying-erlang-beam/</link>
      <pubDate>Fri, 12 May 2017 09:43:12 +0530</pubDate>
      
      <guid>https://krishnakumar4a4.github.io/post/simplifying-erlang-beam/</guid>
      <description>Light weight processes: All the Erlang code compiles to beam code and runs on the Erlang beam virtual machine. Nevertheless to say, it is a super powerful engine that can instantly creates and runs millions of processes with each process having a very minimal footprint size of 233 words. Each erlang process is like a green thread and shares nothing with siblings.
Erlang process scheduler: The whole Erlang beam machine runs as a single process at the underlying operating system level just like JVM.</description>
    </item>
    
    <item>
      <title>React-Redux and Erlang — A Simple analogy</title>
      <link>https://krishnakumar4a4.github.io/post/react-redux-erlang-analogy/</link>
      <pubDate>Mon, 01 May 2017 09:43:12 +0530</pubDate>
      
      <guid>https://krishnakumar4a4.github.io/post/react-redux-erlang-analogy/</guid>
      <description>If you know
Erlang and wanted to know how easy is react-redux to learn, Start reading from “I am an Erlang developer and wanted to know about react-redux” React-Redux and wanted to dive into erlang world for greater good, start from erlang synopsis section below. I am an Erlang developer and wanted to know about react-redux: If you had some experience in using gen_servers and gen_event behaviors? Learning react-redux would be simple for you too, just like me.</description>
    </item>
    
    <item>
      <title>Be on your best Erlang behavior</title>
      <link>https://krishnakumar4a4.github.io/post/be-on-your-best-erlang-behavior/</link>
      <pubDate>Sat, 01 Apr 2017 09:43:12 +0530</pubDate>
      
      <guid>https://krishnakumar4a4.github.io/post/be-on-your-best-erlang-behavior/</guid>
      <description>I had a great session with my team on Erlang behaviors and thought it would be worth blogging it. I have got chance to explain them about available erlang behaviors and how to choose and use them.
1.gen_supervisor 2.gen_server 3.gen_event 4.gen_fsm
When you want to employ a behavior in your applications, you should have a basic understanding of the below two types of functions.
API → Exposed to the user for external control and to send events.</description>
    </item>
    
    <item>
      <title>Know why you may choose Erlang</title>
      <link>https://krishnakumar4a4.github.io/post/know-why-you-may-choose-erlang/</link>
      <pubDate>Sat, 01 Apr 2017 09:43:12 +0530</pubDate>
      
      <guid>https://krishnakumar4a4.github.io/post/know-why-you-may-choose-erlang/</guid>
      <description>When you have good understanding on Erlang, you will inherently start to see other applications differently.
You will have tendency to ask questions like what is the scalability? What is the uptime? How easy is the code upgrade? How much availability can be guaranteed? Would the choice of database can match the speed of your application? How easy is to make your application distributed? Most of all, Can it crash fast and recover fast?</description>
    </item>
    
    <item>
      <title>The verge of suggestions/recommendations engines</title>
      <link>https://krishnakumar4a4.github.io/post/verge-of-recommendation-engines/</link>
      <pubDate>Sat, 01 Apr 2017 09:43:12 +0530</pubDate>
      
      <guid>https://krishnakumar4a4.github.io/post/verge-of-recommendation-engines/</guid>
      <description>I have come early from office today and would be watching my next new series from my recommendation list. I hope I would definitely like it as it is based on my behavioral patterns from my earlier watches.
I thought of buying a new home for me. I would visit a real estate site that runs on machine learning and gives you recommendations based on your web history or your search preferences.</description>
    </item>
    
    <item>
      <title>In-Memory Caching: Curb Tail Latency with Pelikan</title>
      <link>https://krishnakumar4a4.github.io/post/in-memory-caching-curb-tail-latency-with-pelikan/</link>
      <pubDate>Sat, 24 Dec 2016 09:43:12 +0530</pubDate>
      
      <guid>https://krishnakumar4a4.github.io/post/in-memory-caching-curb-tail-latency-with-pelikan/</guid>
      <description>Tail latency: When you have a bunch of servers trying to serve a request in parallel, One of the servers might take more time than others which affects the overall response time. In other words, Latency of a tail server(worst performing) is affecting the whole response time.
When thinking about scale,distribution and speed. Caching is one of the important thing that stumbles you. Understanding it, mean a lot while you wanted to improve or implement them in other programming languages.</description>
    </item>
    
    <item>
      <title>Million event Erlang “like” engine</title>
      <link>https://krishnakumar4a4.github.io/post/million-event-erlang-engine/</link>
      <pubDate>Wed, 07 Dec 2016 09:43:12 +0530</pubDate>
      
      <guid>https://krishnakumar4a4.github.io/post/million-event-erlang-engine/</guid>
      <description>Inspiration: Facebook has a very unique and custom architecture to handle millions of likes on its posts every second. Sometimes a post is so catchy that it will attract millions of likes per second and being a fan of that article you don’t want to miss its live statistics.
Shorten the goal: My goal is to create a like engine with can handle millions of likes per second. Let it be 1 like for 1 article/URL or 1000 likes for 1000 articles/URLs or 1 article/URL with million likes.</description>
    </item>
    
    <item>
      <title>Beauty and mystery of Erlang distribution</title>
      <link>https://krishnakumar4a4.github.io/post/beauty-mystery-erlang-distribution/</link>
      <pubDate>Sun, 14 Aug 2016 09:43:12 +0530</pubDate>
      
      <guid>https://krishnakumar4a4.github.io/post/beauty-mystery-erlang-distribution/</guid>
      <description>I work on a network element simulator written in Erlang. For us, each network element is a bunch of Erlang processes work together to simulate a network element and we are simulating tens and hundreds of them on each Erlang node. We also run a distributed network of erlang nodes which all together renders some thousands of network elements running on one Linux machine.
Done with background!!
The problem: We are not able to start more than 250 Erlang nodes on one Linux machine provided we have enough resources to start more of them, and thus limiting our network element count beyond some value.</description>
    </item>
    
  </channel>
</rss>
